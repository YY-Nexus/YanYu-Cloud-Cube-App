name: Auto Fix Lint / Format / Conflicts

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 1' # 每周一固定跑
  issue_comment:
    types: [created]

jobs:
  autofix:
    if: github.event_name != 'issue_comment' || contains(github.event.comment.body, '/autofix')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'pnpm' }
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Auto-fix lint and format
        run: |
          echo "Running lint:fix and format..."
          pnpm lint:fix || true
          pnpm format || true
      - name: Auto-resolve conflicts if any
        run: |
          echo "Checking for and resolving conflicts..."
          if [ -f "scripts/auto-resolve-conflicts.sh" ]; then
            bash scripts/auto-resolve-conflicts.sh pnpm-lock.yaml || true
            bash scripts/auto-resolve-conflicts.sh || true
          fi
      - name: Handle changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if [ -n "$(git status --porcelain)" ]; then
            echo "Changes detected, processing..."
            
            # If this is a PR comment, commit to the current PR branch
            if [ "${{ github.event_name }}" = "issue_comment" ] && [ -n "${{ github.event.issue.pull_request }}" ]; then
              echo "Committing to PR branch..."
              PR_NUMBER=${{ github.event.issue.number }}
              BRANCH=$(gh pr view $PR_NUMBER --json headRefName --jq '.headRefName')
              git fetch origin $BRANCH
              git checkout $BRANCH
              git add .
              git commit -m "chore: autofix lint, format, and conflicts via /autofix command"
              git push origin $BRANCH
              
              gh pr comment $PR_NUMBER --body "🤖 Auto-fixed lint, format, and conflicts. Changes have been committed to this PR."
            else
              # Create new PR for scheduled runs or manual triggers
              echo "Creating new PR..."
              BR=chore/autofix-$(date +%Y%m%d%H%M%S)
              git checkout -b $BR
              git add .
              git commit -m "chore: autofix lint, format, and conflicts"
              git push origin $BR
              gh pr create --title "chore: autofix lint, format, and conflicts" --body "🤖 自动修复代码格式、语法和冲突\n\n- Lint fixes\n- Code formatting\n- Conflict resolution\n\n由自动化流水线生成" --base main
            fi
          else
            echo "No changes to commit."
            if [ "${{ github.event_name }}" = "issue_comment" ] && [ -n "${{ github.event.issue.pull_request }}" ]; then
              gh pr comment ${{ github.event.issue.number }} --body "✅ No autofix changes needed - code is already clean!"
            fi
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
