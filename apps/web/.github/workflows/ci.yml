name: Web App CI/CD

on:
  push:
    branches: ['main', 'develop']
    paths:
      - 'apps/web/**'
      - '.github/workflows/web-ci.yml'
  pull_request:
    branches: ['main', 'develop']
    paths:
      - 'apps/web/**'
      - '.github/workflows/web-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Web App
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: |
          cd apps/web
          pnpm lint

      - name: Run type checking
        run: |
          cd apps/web
          pnpm type-check

      - name: Run tests
        run: |
          cd apps/web
          pnpm test

      - name: Build application
        run: |
          cd apps/web
          pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: apps/web/.next
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    name: Deploy Web App
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build for production
        run: |
          cd apps/web
          pnpm build

      - name: Deploy to Vercel (if configured)
        if: env.VERCEL_TOKEN != ''
        run: |
          npm i -g vercel
          cd apps/web
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}